# Production Dockerfile for Akasha Frontend
# Multi-stage build for optimal React production deployment

# Build stage
FROM --platform=linux/arm64 node:18-alpine as builder

# Set working directory
WORKDIR /app

# Copy package files
COPY package*.json ./

# Install dependencies
RUN npm ci --only=production --silent

# Copy source code
COPY . .

# Build the React app for production
RUN npm run build

# Production stage with nginx
FROM --platform=linux/arm64 nginx:1.24-alpine as production

# Copy custom nginx configuration
COPY docker/nginx.conf /etc/nginx/nginx.conf
COPY docker/default.conf /etc/nginx/conf.d/default.conf

# Copy built React app from builder stage
COPY --from=builder /app/build /usr/share/nginx/html

# Create non-root user for security
RUN addgroup -g 1001 -S akasha && \
    adduser -S akasha -u 1001 -G akasha

# Set proper permissions
RUN chown -R akasha:akasha /usr/share/nginx/html && \
    chown -R akasha:akasha /var/cache/nginx && \
    chown -R akasha:akasha /var/log/nginx && \
    chown -R akasha:akasha /etc/nginx/conf.d

# Create nginx PID directory with proper permissions
RUN mkdir -p /var/run/nginx && \
    chown -R akasha:akasha /var/run/nginx

# Switch to non-root user
USER akasha

# Expose port
EXPOSE 3000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:3000 || exit 1

# Start nginx
CMD ["nginx", "-g", "daemon off;"]